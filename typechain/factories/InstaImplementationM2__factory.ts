/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InstaImplementationM2,
  InstaImplementationM2Interface,
} from "../InstaImplementationM2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instaIndex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_connectors",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "targetsNames",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "eventNames",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "eventParams",
        type: "bytes[]",
      },
    ],
    name: "LogCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_targetNames",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "_datas",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_origin",
        type: "address",
      },
    ],
    name: "castWithFlashloan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsM1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200143d3803806200143d8339818101604052810190620000379190620000c4565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000153565b600081519050620000be8162000139565b92915050565b60008060408385031215620000d857600080fd5b6000620000e885828601620000ad565b9250506020620000fb85828601620000ad565b9150509250929050565b6000620001128262000119565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001448162000105565b81146200015057600080fd5b50565b60805160601c60a05160601c6112bc6200018160003980609652806102cf52508061015752506112bc6000f3fe60806040526004361061002d5760003560e01c80636254a08f146100395780638334a2d11461006457610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610094565b60405161005b9190610db1565b60405180910390f35b61007e600480360381019061007991906107f5565b6100b8565b60405161008b9190610e0b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60008030905060008787905090508173ffffffffffffffffffffffffffffffffffffffff16632520e7ff336040518263ffffffff1660e01b81526004016100ff9190610dcc565b60206040518083038186803b15801561011757600080fd5b505afa15801561012b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014f919061087e565b806101a557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101db90610e86565b60405180910390fd5b858590508114610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610e26565b60405180910390fd5b60608167ffffffffffffffff8111801561024257600080fd5b5060405190808252806020026020018201604052801561027657816020015b60608152602001906001900390816102615790505b50905060608267ffffffffffffffff8111801561029257600080fd5b506040519080825280602002602001820160405280156102c657816020015b60608152602001906001900390816102b15790505b509050600060607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0a32c0b8d8d6040518363ffffffff1660e01b8152600401610328929190610de7565b60006040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061037d91906108a7565b91509150816103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610e66565b60405180910390fd5b60005b815181101561049357606061044c8383815181106103de57fe5b60200260200101518d8d858181106103f257fe5b90506020028101906104049190610f17565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610512565b9050610457816105d3565b87848151811061046357fe5b6020026020010187858151811061047657fe5b6020026020010182905282905250505080806001019150506103c4565b503373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167ff6d9b29bbf2ae698de33670961ec53f895af65801d2cdaced431cc6129865347348f8f868a8a6040516104fb96959493929190610ea6565b60405180910390a350505050505095945050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90610e46565b60405180910390fd5b600080835160208501865af43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146105c0576105ca565b816000803e816000fd5b50505092915050565b606080828060200190518101906105ea91906108fb565b8092508193505050915091565b60008135905061060681611258565b92915050565b60008151905061061b81611258565b92915050565b600082601f83011261063257600080fd5b815161064561064082610f9b565b610f6e565b9150818183526020840193506020810190508385602084028201111561066a57600080fd5b60005b8381101561069a5781610680888261060c565b84526020840193506020830192505060018101905061066d565b5050505092915050565b60008083601f8401126106b657600080fd5b8235905067ffffffffffffffff8111156106cf57600080fd5b6020830191508360208202830111156106e757600080fd5b9250929050565b60008083601f84011261070057600080fd5b8235905067ffffffffffffffff81111561071957600080fd5b60208301915083602082028301111561073157600080fd5b9250929050565b6000815190506107478161126f565b92915050565b600082601f83011261075e57600080fd5b815161077161076c82610fc3565b610f6e565b9150808252602083016020830185838301111561078d57600080fd5b610798838284611214565b50505092915050565b600082601f8301126107b257600080fd5b81516107c56107c082610fef565b610f6e565b915080825260208301602083018583830111156107e157600080fd5b6107ec838284611214565b50505092915050565b60008060008060006060868803121561080d57600080fd5b600086013567ffffffffffffffff81111561082757600080fd5b610833888289016106ee565b9550955050602086013567ffffffffffffffff81111561085257600080fd5b61085e888289016106a4565b93509350506040610871888289016105f7565b9150509295509295909350565b60006020828403121561089057600080fd5b600061089e84828501610738565b91505092915050565b600080604083850312156108ba57600080fd5b60006108c885828601610738565b925050602083015167ffffffffffffffff8111156108e557600080fd5b6108f185828601610621565b9150509250929050565b6000806040838503121561090e57600080fd5b600083015167ffffffffffffffff81111561092857600080fd5b610934858286016107a1565b925050602083015167ffffffffffffffff81111561095157600080fd5b61095d8582860161074d565b9150509250929050565b600061097383836109cc565b60208301905092915050565b600061098b8383610bb7565b905092915050565b60006109a0848484610bf0565b90509392505050565b60006109b58383610c1d565b905092915050565b6109c6816111cf565b82525050565b6109d58161117d565b82525050565b6109e48161117d565b82525050565b60006109f582611055565b6109ff81856110c0565b9350610a0a8361101b565b8060005b83811015610a3b578151610a228882610967565b9750610a2d8361108c565b925050600181019050610a0e565b5085935050505092915050565b6000610a5382611060565b610a5d81856110d1565b935083602082028501610a6f8561102b565b8060005b85811015610aab5784840389528151610a8c858261097f565b9450610a9783611099565b925060208a01995050600181019050610a73565b50829750879550505050505092915050565b6000610ac983856110e2565b935083602084028501610adb8461103b565b8060005b87811015610b21578484038952610af68284611126565b610b01868284610993565b9550610b0c846110a6565b935060208b019a505050600181019050610adf565b50829750879450505050509392505050565b6000610b3e8261106b565b610b4881856110e2565b935083602082028501610b5a85611045565b8060005b85811015610b965784840389528151610b7785826109a9565b9450610b82836110b3565b925060208a01995050600181019050610b5e565b50829750879550505050505092915050565b610bb18161119b565b82525050565b6000610bc282611076565b610bcc81856110f3565b9350610bdc818560208601611214565b610be581611247565b840191505092915050565b6000610bfc8385611104565b9350610c09838584611205565b610c1283611247565b840190509392505050565b6000610c2882611081565b610c328185611104565b9350610c42818560208601611214565b610c4b81611247565b840191505092915050565b6000610c63602b83611115565b91507f496e737461496d706c656d656e746174696f6e4d313a2061727261792d6c656e60008301527f6774682d696e76616c69640000000000000000000000000000000000000000006020830152604082019050919050565b6000610cc9600e83611115565b91507f7461726765742d696e76616c69640000000000000000000000000000000000006000830152602082019050919050565b6000610d09601083611115565b91507f313a206e6f742d636f6e6e6563746f72000000000000000000000000000000006000830152602082019050919050565b6000610d49602883611115565b91507f496e737461496d706c656d656e746174696f6e4d313a207065726d697373696f60008301527f6e2d64656e6965640000000000000000000000000000000000000000000000006020830152604082019050919050565b610dab816111c5565b82525050565b6000602082019050610dc660008301846109db565b92915050565b6000602082019050610de160008301846109bd565b92915050565b60006020820190508181036000830152610e02818486610abd565b90509392505050565b6000602082019050610e206000830184610ba8565b92915050565b60006020820190508181036000830152610e3f81610c56565b9050919050565b60006020820190508181036000830152610e5f81610cbc565b9050919050565b60006020820190508181036000830152610e7f81610cfc565b9050919050565b60006020820190508181036000830152610e9f81610d3c565b9050919050565b600060a082019050610ebb6000830189610da2565b8181036020830152610ece818789610abd565b90508181036040830152610ee281866109ea565b90508181036060830152610ef68185610b33565b90508181036080830152610f0a8184610a48565b9050979650505050505050565b60008083356001602003843603038112610f3057600080fd5b80840192508235915067ffffffffffffffff821115610f4e57600080fd5b602083019250600182023603831315610f6657600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715610f9157600080fd5b8060405250919050565b600067ffffffffffffffff821115610fb257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610fda57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561100657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000808335600160200384360303811261113f57600080fd5b83810192508235915060208301925067ffffffffffffffff82111561116357600080fd5b60018202360384131561117557600080fd5b509250929050565b6000611188826111a5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111da826111e1565b9050919050565b60006111ec826111f3565b9050919050565b60006111fe826111a5565b9050919050565b82818337600083830152505050565b60005b83811015611232578082015181840152602081019050611217565b83811115611241576000848401525b50505050565b6000601f19601f8301169050919050565b6112618161117d565b811461126c57600080fd5b50565b6112788161118f565b811461128357600080fd5b5056fea2646970667358221220ae4397fce86152cca67078b6d15712874eec7e691bbc0be37ad1753edcd1a33a64736f6c63430007000033";

type InstaImplementationM2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstaImplementationM2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstaImplementationM2__factory extends ContractFactory {
  constructor(...args: InstaImplementationM2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _instaIndex: string,
    _connectors: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InstaImplementationM2> {
    return super.deploy(
      _instaIndex,
      _connectors,
      overrides || {}
    ) as Promise<InstaImplementationM2>;
  }
  getDeployTransaction(
    _instaIndex: string,
    _connectors: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _instaIndex,
      _connectors,
      overrides || {}
    );
  }
  attach(address: string): InstaImplementationM2 {
    return super.attach(address) as InstaImplementationM2;
  }
  connect(signer: Signer): InstaImplementationM2__factory {
    return super.connect(signer) as InstaImplementationM2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstaImplementationM2Interface {
    return new utils.Interface(_abi) as InstaImplementationM2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InstaImplementationM2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InstaImplementationM2;
  }
}
