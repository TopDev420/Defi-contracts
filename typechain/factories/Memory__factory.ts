/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Memory, MemoryInterface } from "../Memory";

const _abi = [
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getEventAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMemoryAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011b806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063e82eb6fa146041578063eb15f781146073578063fa821c9b146096575b600080fd5b604760c8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b607960cd565b604051808381526020018281526020019250505060405180910390f35b609c60e0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600090565b6000806001600280925081935050509091565b60009056fea264697066735822122013f6e69d0a9b0dace655a19f92c4c1d25a365cfeaabe23abb6a6721e08e1a7e964736f6c63430007000033";

type MemoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MemoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Memory__factory extends ContractFactory {
  constructor(...args: MemoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Memory> {
    return super.deploy(overrides || {}) as Promise<Memory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Memory {
    return super.attach(address) as Memory;
  }
  connect(signer: Signer): Memory__factory {
    return super.connect(signer) as Memory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MemoryInterface {
    return new utils.Interface(_abi) as MemoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Memory {
    return new Contract(address, _abi, signerOrProvider) as Memory;
  }
}
