/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ListInterface, ListInterfaceInterface } from "../ListInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "accountAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountID",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "accountLink",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "first",
            type: "address",
          },
          {
            internalType: "address",
            name: "last",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "count",
            type: "uint64",
          },
        ],
        internalType: "struct ListInterface.AccountLink",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "prev",
            type: "address",
          },
          {
            internalType: "address",
            name: "next",
            type: "address",
          },
        ],
        internalType: "struct ListInterface.AccountList",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLink",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "first",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "last",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "count",
            type: "uint64",
          },
        ],
        internalType: "struct ListInterface.UserLink",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "userList",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "prev",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "next",
            type: "uint64",
          },
        ],
        internalType: "struct ListInterface.UserList",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ListInterface__factory {
  static readonly abi = _abi;
  static createInterface(): ListInterfaceInterface {
    return new utils.Interface(_abi) as ListInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListInterface {
    return new Contract(address, _abi, signerOrProvider) as ListInterface;
  }
}
