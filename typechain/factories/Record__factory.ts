/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Record, RecordInterface } from "../Record";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "LogCheckMapping",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "LogDisableUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "LogEnableUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_shield",
        type: "bool",
      },
    ],
    name: "LogSwitchShield",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "disable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    name: "editCheckMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "enable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shield",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shield",
        type: "bool",
      },
    ],
    name: "switchShield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ff0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806354fd4d501161006657806354fd4d501461011e5780635bfa1b681461013c57806370d39cff14610158578063a41098bf14610176578063e6c09edf1461019457610093565b806306bfcec61461009857806318a35aa8146100b65780632520e7ff146100d2578063501b9b6714610102575b600080fd5b6100a06101b0565b6040516100ad9190610f18565b60405180910390f35b6100d060048036038101906100cb9190610be7565b6101b5565b005b6100ec60048036038101906100e79190610b95565b610327565b6040516100f99190610e3d565b60405180910390f35b61011c60048036038101906101179190610c23565b61037c565b005b6101266104c0565b6040516101339190610f18565b60405180910390f35b61015660048036038101906101519190610b95565b6104c5565b005b610160610822565b60405161016d9190610e3d565b60405180910390f35b61017e610835565b60405161018b9190610df9565b60405180910390f35b6101ae60048036038101906101a99190610b95565b61084d565b005b600281565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610e78565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a90610e58565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f908d4af18a344de9c02d15a99816dc48467cae734dbf1568493943a0c239ff10828260405161031b929190610e14565b60405180910390a15050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fe90610ed8565b60405180910390fd5b801515600160009054906101000a900460ff161515141561045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610ef8565b60405180910390fd5b80600160006101000a81548160ff0219169083151502179055507f38a4860f1db0d5ebd83e321dae638039485f74aca43265d0772f95ac9267830d600160009054906101000a900460ff166040516104b59190610e3d565b60405180910390a150565b600281565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061053e5750732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061054e575061054d33610327565b5b61058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058490610e78565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610e58565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068090610eb8565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff16630f560cd76040518163ffffffff1660e01b815260040160206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610bbe565b73ffffffffffffffffffffffffffffffffffffffff16635422224e826040518263ffffffff1660e01b81526004016107aa9190610df9565b600060405180830381600087803b1580156107c457600080fd5b505af11580156107d8573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167ff2655ca50c134f2081360f02a1bf4714b79d312ffc82f90953fbb323f76d2e1660405160405180910390a250565b600160009054906101000a900460ff1681565b732971adfa57b20e5a416ae5a708a8655a9c74f72381565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061088c575061088b33610327565b5b6108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c290610ed8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093290610e58565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90610e98565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff16630f560cd76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6e57600080fd5b505afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa69190610bbe565b73ffffffffffffffffffffffffffffffffffffffff16637f3fd918826040518263ffffffff1660e01b8152600401610ade9190610df9565b600060405180830381600087803b158015610af857600080fd5b505af1158015610b0c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f872bc86c6a0d7426cb60e1e35fda9dc5fbc0ddbd5564ecb5ca309626f7462abe60405160405180910390a250565b600081359050610b6581610f8c565b92915050565b600081519050610b7a81610f8c565b92915050565b600081359050610b8f81610fa3565b92915050565b600060208284031215610ba757600080fd5b6000610bb584828501610b56565b91505092915050565b600060208284031215610bd057600080fd5b6000610bde84828501610b6b565b91505092915050565b60008060408385031215610bfa57600080fd5b6000610c0885828601610b56565b9250506020610c1985828601610b80565b9150509250929050565b600060208284031215610c3557600080fd5b6000610c4384828501610b80565b91505092915050565b610c5581610f44565b82525050565b610c6481610f56565b82525050565b6000610c77600983610f33565b91507f6e6f742d76616c696400000000000000000000000000000000000000000000006000830152602082019050919050565b6000610cb7600e83610f33565b91507f6e6f742d73656c662d696e6465780000000000000000000000000000000000006000830152602082019050919050565b6000610cf7601083610f33565b91507f616c72656164792d64697361626c6564000000000000000000000000000000006000830152602082019050919050565b6000610d37600f83610f33565b91507f616c72656164792d656e61626c656400000000000000000000000000000000006000830152602082019050919050565b6000610d77600883610f33565b91507f6e6f742d73656c660000000000000000000000000000000000000000000000006000830152602082019050919050565b6000610db7600d83610f33565b91507f736869656c6420697320736574000000000000000000000000000000000000006000830152602082019050919050565b610df381610f82565b82525050565b6000602082019050610e0e6000830184610c4c565b92915050565b6000604082019050610e296000830185610c4c565b610e366020830184610c5b565b9392505050565b6000602082019050610e526000830184610c5b565b92915050565b60006020820190508181036000830152610e7181610c6a565b9050919050565b60006020820190508181036000830152610e9181610caa565b9050919050565b60006020820190508181036000830152610eb181610cea565b9050919050565b60006020820190508181036000830152610ed181610d2a565b9050919050565b60006020820190508181036000830152610ef181610d6a565b9050919050565b60006020820190508181036000830152610f1181610daa565b9050919050565b6000602082019050610f2d6000830184610dea565b92915050565b600082825260208201905092915050565b6000610f4f82610f62565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610f9581610f44565b8114610fa057600080fd5b50565b610fac81610f56565b8114610fb757600080fd5b5056fea264697066735822122003a1bea7ea9c2935b63061e786bba082e8a9c94ed0cd6f1b08fef0199cf9cf2564736f6c63430007000033";

type RecordConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecordConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Record__factory extends ContractFactory {
  constructor(...args: RecordConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Record> {
    return super.deploy(overrides || {}) as Promise<Record>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Record {
    return super.attach(address) as Record;
  }
  connect(signer: Signer): Record__factory {
    return super.connect(signer) as Record__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecordInterface {
    return new utils.Interface(_abi) as RecordInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Record {
    return new Contract(address, _abi, signerOrProvider) as Record;
  }
}
