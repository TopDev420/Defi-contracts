/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectCompound,
  ConnectCompoundInterface,
} from "../ConnectCompound";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogPayback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "payback",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600b81526020017f436f6d706f756e642d7631000000000000000000000000000000000000000000815250600090805190602001906200005192919062000066565b503480156200005f57600080fd5b506200010c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000a957805160ff1916838001178555620000da565b82800160010185558215620000da579182015b82811115620000d9578251825591602001919060010190620000bc565b5b509050620000e99190620000ed565b5090565b5b8082111562000108576000816000905550600101620000ee565b5090565b6121fa806200011c6000396000f3fe60806040526004361061004a5760003560e01c806306fdde031461004f57806338baa4c2146100df5780634532d77614610226578063a33d406f1461036d578063ce88b439146104b4575b600080fd5b34801561005b57600080fd5b506100646105fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013f600480360360808110156100f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610699565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610183578082015181840152602081019050610168565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156101e95780820151818401526020810190506101ce565b50505050905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102866004803603608081101561023c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061097d565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156102ca5780820151818401526020810190506102af565b50505050905090810190601f1680156102f75780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610330578082015181840152602081019050610315565b50505050905090810190601f16801561035d5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6103cd6004803603608081101561038357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061100b565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156104115780820151818401526020810190506103f6565b50505050905090810190601f16801561043e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561047757808201518184015260208101905061045c565b50505050905090810190601f1680156104a45780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610514600480360360808110156104ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061167e565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561055857808201518184015260208101905061053d565b50505050905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156105be5780820151818401526020810190506105a3565b50505050905090810190601f1680156105eb5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106915780601f1061066657610100808354040283529160200191610691565b820191906000526020600020905b81548152906001019060200180831161067457829003601f168201915b505050505081565b60608060006106a88587611b96565b905060006106b4611c43565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e9896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561071a57600080fd5b505afa15801561072e573d6000803e3d6000fd5b505050506040513d602081101561074457600080fd5b8101908080519060200190929190505050905061076081611c5f565b60008173ffffffffffffffffffffffffffffffffffffffff1663c5ebeaec846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b505050506040513d60208110156107df57600080fd5b810190808051906020019092919050505014610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f626f72726f772d6661696c65640000000000000000000000000000000000000081525060200191505060405180910390fd5b61086d858361201d565b8773ffffffffffffffffffffffffffffffffffffffff167f3a5151e57d3bc9798e7853034ac52293d1a0e12a2b44725e75b03b21f86477a682848989604051808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a26040518060600160405280603281526020016120f96032913993508781838888604051602001808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001955050505050506040516020818303038152906040529250505094509492505050565b606080600061098c8587611b96565b90506000610998611c43565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e9896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d6020811015610a2857600080fd5b8101908080519060200190929190505050905060008190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831415610dec5760008990506000610a776120a4565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614610b50578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d6020811015610b3a57600080fd5b8101908080519060200190929190505050610b52565b475b905060008373ffffffffffffffffffffffffffffffffffffffff1663db006a758573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b505050506040513d6020811015610c7457600080fd5b810190808051906020019092919050505014610cf8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f66756c6c2d77697468647261772d6661696c656400000000000000000000000081525060200191505060405180910390fd5b6000610d026120a4565b73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614610ddb578273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d9b57600080fd5b505afa158015610daf573d6000803e3d6000fd5b505050506040513d6020811015610dc557600080fd5b8101908080519060200190929190505050610ddd565b475b90508181039550505050610ef0565b60008173ffffffffffffffffffffffffffffffffffffffff1663852a12e3856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610e4157600080fd5b505af1158015610e55573d6000803e3d6000fd5b505050506040513d6020811015610e6b57600080fd5b810190808051906020019092919050505014610eef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f77697468647261772d6661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b610efa868461201d565b8873ffffffffffffffffffffffffffffffffffffffff167facb207402cd2b663d2290a64caab15469bccde82d9c05051581c19189ea2469583858a8a604051808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a26040518060600160405280603481526020016121916034913994508882848989604051602001808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050604051602081830303815290604052935050505094509492505050565b606080600061101a8587611b96565b90506000611026611c43565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e9896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561108c57600080fd5b505afa1580156110a0573d6000803e3d6000fd5b505050506040513d60208110156110b657600080fd5b8101908080519060200190929190505050905060008190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83146110fb57826111a0565b8073ffffffffffffffffffffffffffffffffffffffff166317bfdfbc306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561116457600080fd5b505af1158015611178573d6000803e3d6000fd5b505050506040513d602081101561118e57600080fd5b81019080805190602001909291905050505b92506111aa6120a4565b73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614156112b95782471015611253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f742d656e6f7567682d65746800000000000000000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16634e4d9fea846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b5050505050611563565b6000899050838173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561132657600080fd5b505afa15801561133a573d6000803e3d6000fd5b505050506040513d602081101561135057600080fd5b810190808051906020019092919050505010156113d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f742d656e6f7567682d746f6b656e0000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b384866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff16630e752702866040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156114b357600080fd5b505af11580156114c7573d6000803e3d6000fd5b505050506040513d60208110156114dd57600080fd5b810190808051906020019092919050505014611561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f72657061792d6661696c65642e0000000000000000000000000000000000000081525060200191505060405180910390fd5b505b61156d868461201d565b8873ffffffffffffffffffffffffffffffffffffffff167f9410947f31b0a8fec2af0832d79c52a241738266186f3bced73169fa08de955583858a8a604051808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a260405180606001604052806033815260200161212b6033913994508882848989604051602001808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050604051602081830303815290604052935050505094509492505050565b606080600061168d8587611b96565b90506000611699611c43565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e9896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156116ff57600080fd5b505afa158015611713573d6000803e3d6000fd5b505050506040513d602081101561172957600080fd5b8101908080519060200190929190505050905061174581611c5f565b61174d6120a4565b73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415611817577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146117ad57816117af565b475b91508073ffffffffffffffffffffffffffffffffffffffff16631249c58b836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156117f957600080fd5b505af115801561180d573d6000803e3d6000fd5b5050505050611a7c565b60008890507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831461184957826118ec565b8073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156118b057600080fd5b505afa1580156118c4573d6000803e3d6000fd5b505050506040513d60208110156118da57600080fd5b81019080805190602001909291905050505b92508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b383856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff1663a0712d68856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156119cc57600080fd5b505af11580156119e0573d6000803e3d6000fd5b505050506040513d60208110156119f657600080fd5b810190808051906020019092919050505014611a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6465706f7369742d6661696c656400000000000000000000000000000000000081525060200191505060405180910390fd5b505b611a86858361201d565b8773ffffffffffffffffffffffffffffffffffffffff167fab14747d46633612ff5c029a3117f98ffb6506ebf31bab40972f911b7dd1889182848989604051808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a260405180606001604052806033815260200161215e6033913993508781838888604051602001808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001955050505050506040516020818303038152906040529250505094509492505050565b6000808314611c3957611ba76120c0565b73ffffffffffffffffffffffffffffffffffffffff1663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015611bf957600080fd5b505af1158015611c0d573d6000803e3d6000fd5b505050506040513d6020811015611c2357600080fd5b8101908080519060200190929190505050611c3b565b815b905092915050565b600073e81f70cc7c0d46e12d70efc60607f16bbd617e88905090565b6000611c696120dc565b905060608173ffffffffffffffffffffffffffffffffffffffff1663abfceffc306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015611cd457600080fd5b505afa158015611ce8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611d1257600080fd5b8101908080516040519392919084640100000000821115611d3257600080fd5b83820191506020820185811115611d4857600080fd5b8251866020820283011164010000000082111715611d6557600080fd5b8083526020830192505050908051906020019060200280838360005b83811015611d9c578082015181840152602081019050611d81565b5050505090500160405250505090506000805b8251811015611e11578473ffffffffffffffffffffffffffffffffffffffff16838281518110611ddb57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611e0457600191505b8080600101915050611daf565b5080612017576060600167ffffffffffffffff81118015611e3157600080fd5b50604051908082528060200260200182016040528015611e605781602001602082028036833780820191505090505b5090508481600081518110611e7157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663c2998238826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b83811015611f1a578082015181840152602081019050611eff565b5050505090500192505050600060405180830381600087803b158015611f3f57600080fd5b505af1158015611f53573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611f7d57600080fd5b8101908080516040519392919084640100000000821115611f9d57600080fd5b83820191506020820185811115611fb357600080fd5b8251866020820283011164010000000082111715611fd057600080fd5b8083526020830192505050908051906020019060200280838360005b83811015612007578082015181840152602081019050611fec565b5050505090500160405250505050505b50505050565b600082146120a05761202d6120c0565b73ffffffffffffffffffffffffffffffffffffffff166361e3c94483836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561208757600080fd5b505af115801561209b573d6000803e3d6000fd5b505050505b5050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee905090565b6000738a5419cfc711b2343c17a6abf4b2bafabb06957f905090565b6000733d9819210a31b4961b30ef54be2aed79b9c9cd3b90509056fe4c6f67426f72726f7728616464726573732c616464726573732c75696e743235362c75696e743235362c75696e74323536294c6f675061796261636b28616464726573732c616464726573732c75696e743235362c75696e743235362c75696e74323536294c6f674465706f73697428616464726573732c616464726573732c75696e743235362c75696e743235362c75696e74323536294c6f67576974686472617728616464726573732c616464726573732c75696e743235362c75696e743235362c75696e7432353629a264697066735822122040f563329c77bf465a7a5eecb5b3a594f414cc3c8d043a54c1672523cea3b9c564736f6c63430007000033";

type ConnectCompoundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectCompoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectCompound__factory extends ContractFactory {
  constructor(...args: ConnectCompoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectCompound> {
    return super.deploy(overrides || {}) as Promise<ConnectCompound>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectCompound {
    return super.attach(address) as ConnectCompound;
  }
  connect(signer: Signer): ConnectCompound__factory {
    return super.connect(signer) as ConnectCompound__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectCompoundInterface {
    return new utils.Interface(_abi) as ConnectCompoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectCompound {
    return new Contract(address, _abi, signerOrProvider) as ConnectCompound;
  }
}
