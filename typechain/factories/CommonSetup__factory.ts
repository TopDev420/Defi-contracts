/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CommonSetup, CommonSetupInterface } from "../CommonSetup";

const _abi = [
  {
    inputs: [],
    name: "implementationVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shield",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101fa806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306bfcec61461005157806354fd4d501461006f57806370d39cff1461008d578063a41098bf146100ab575b600080fd5b6100596100c9565b6040516100669190610161565b60405180910390f35b6100776100ce565b6040516100849190610161565b60405180910390f35b6100956100d3565b6040516100a29190610146565b60405180910390f35b6100b36100e6565b6040516100c0919061012b565b60405180910390f35b600281565b600281565b600160009054906101000a900460ff1681565b732971adfa57b20e5a416ae5a708a8655a9c74f72381565b6101078161017c565b82525050565b6101168161018e565b82525050565b610125816101ba565b82525050565b600060208201905061014060008301846100fe565b92915050565b600060208201905061015b600083018461010d565b92915050565b6000602082019050610176600083018461011c565b92915050565b60006101878261019a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220f00acaf567befe0f099d0a8edf694d27c6bce204f4d35973a0c3bfa4698ea88764736f6c63430007000033";

type CommonSetupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommonSetupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommonSetup__factory extends ContractFactory {
  constructor(...args: CommonSetupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CommonSetup> {
    return super.deploy(overrides || {}) as Promise<CommonSetup>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CommonSetup {
    return super.attach(address) as CommonSetup;
  }
  connect(signer: Signer): CommonSetup__factory {
    return super.connect(signer) as CommonSetup__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommonSetupInterface {
    return new utils.Interface(_abi) as CommonSetupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommonSetup {
    return new Contract(address, _abi, signerOrProvider) as CommonSetup;
  }
}
