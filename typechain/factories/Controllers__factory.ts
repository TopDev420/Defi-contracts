/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Controllers, ControllersInterface } from "../Controllers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instaIndex",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "isChief",
        type: "bool",
      },
    ],
    name: "LogController",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chief",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chiefAddress",
        type: "address",
      },
    ],
    name: "toggleChief",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161079938038061079983398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100f6565b60008151905061007e816100df565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e8816100ad565b81146100f357600080fd5b50565b60805160601c6106826101176000398060ed528061039752506106826000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063102c0ffe1461005157806326f9047a1461006d5780636b1056ae1461009d578063a41098bf146100cd575b600080fd5b61006b60048036038101906100669190610437565b6100eb565b005b61008760048036038101906100829190610489565b61032c565b6040516100949190610528565b60405180910390f35b6100b760048036038101906100b29190610437565b610375565b6040516100c49190610543565b60405180910390f35b6100d5610395565b6040516100e29190610528565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561015157600080fd5b505afa158015610165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101899190610460565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed9061055e565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615158173ffffffffffffffffffffffffffffffffffffffff167f6033a9a2a67d8058b7f983c0785fb0f08b24e0cd7d345b30e3b3c63561b8bfdd60405160405180910390a350565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000813590506103c881610635565b92915050565b6000815190506103dd81610635565b92915050565b600082601f8301126103f457600080fd5b8135610407610402826105ab565b61057e565b9150808252602083016020830185838301111561042357600080fd5b61042e838284610626565b50505092915050565b60006020828403121561044957600080fd5b6000610457848285016103b9565b91505092915050565b60006020828403121561047257600080fd5b6000610480848285016103ce565b91505092915050565b60006020828403121561049b57600080fd5b600082013567ffffffffffffffff8111156104b557600080fd5b6104c1848285016103e3565b91505092915050565b6104d3816105e8565b82525050565b6104e2816105fa565b82525050565b60006104f56017836105d7565b91507f746f67676c6543686965663a206e6f742d6d61737465720000000000000000006000830152602082019050919050565b600060208201905061053d60008301846104ca565b92915050565b600060208201905061055860008301846104d9565b92915050565b60006020820190508181036000830152610577816104e8565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156105a157600080fd5b8060405250919050565b600067ffffffffffffffff8211156105c257600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b60006105f382610606565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b61063e816105e8565b811461064957600080fd5b5056fea2646970667358221220fe45743a8c61de72156dbd55712cc3721557d7110a4b4e45d661921489e99dc664736f6c63430007000033";

type ControllersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controllers__factory extends ContractFactory {
  constructor(...args: ControllersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _instaIndex: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controllers> {
    return super.deploy(_instaIndex, overrides || {}) as Promise<Controllers>;
  }
  getDeployTransaction(
    _instaIndex: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_instaIndex, overrides || {});
  }
  attach(address: string): Controllers {
    return super.attach(address) as Controllers;
  }
  connect(signer: Signer): Controllers__factory {
    return super.connect(signer) as Controllers__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllersInterface {
    return new utils.Interface(_abi) as ControllersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controllers {
    return new Contract(address, _abi, signerOrProvider) as Controllers;
  }
}
