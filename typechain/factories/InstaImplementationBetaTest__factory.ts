/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InstaImplementationBetaTest,
  InstaImplementationBetaTestInterface,
} from "../InstaImplementationBetaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instaIndex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_connectors",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "targetsNames",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "eventNames",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "eventParams",
        type: "bytes[]",
      },
    ],
    name: "LogCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_targetNames",
        type: "string[]",
      },
      {
        internalType: "bytes[]",
        name: "_datas",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_origin",
        type: "address",
      },
    ],
    name: "castBeta",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsM1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001488380380620014888339818101604052810190620000379190620000c8565b81818073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505062000157565b600081519050620000c2816200013d565b92915050565b60008060408385031215620000dc57600080fd5b6000620000ec85828601620000b1565b9250506020620000ff85828601620000b1565b9150509250929050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001488162000109565b81146200015457600080fd5b50565b60805160601c60a05160601c61130262000186600039806102fd528061054052508061014152506113026000f3fe60806040526004361061002d5760003560e01c806343d81905146100395780636254a08f1461006957610034565b3661003457005b600080fd5b610053600480360381019061004e9190610850565b610094565b6040516100609190610e47565b60405180910390f35b34801561007557600080fd5b5061007e61053e565b60405161008b9190610e08565b60405180910390f35b6000600160009054906101000a900460ff166100e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100dc90610ee2565b60405180910390fd5b60008686905090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061018f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610e82565b60405180910390fd5b6000811415610212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020990610ec2565b60405180910390fd5b848490508114610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e90610e62565b60405180910390fd5b60608167ffffffffffffffff8111801561027057600080fd5b506040519080825280602002602001820160405280156102a457816020015b606081526020019060019003908161028f5790505b50905060608267ffffffffffffffff811180156102c057600080fd5b506040519080825280602002602001820160405280156102f457816020015b60608152602001906001900390816102df5790505b509050600060607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0a32c0b8c8c6040518363ffffffff1660e01b8152600401610356929190610e23565b60006040518083038186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103ab91906108d9565b91509150816103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610f02565b60405180910390fd5b60005b858110156104c057606061047983838151811061040b57fe5b60200260200101518c8c8581811061041f57fe5b90506020028101906104319190610f93565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610562565b905061048481610623565b87848151811061049057fe5b602002602001018785815181106104a357fe5b6020026020010182905282905250505080806001019150506103f2565b503373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167ff6d9b29bbf2ae698de33670961ec53f895af65801d2cdaced431cc6129865347348e8e868a8a60405161052896959493929190610f22565b60405180910390a3505050505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90610ea2565b60405180910390fd5b600080835160208501865af43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146106105761061a565b816000803e816000fd5b50505092915050565b60608060008351111561064d5782806020019051810190610644919061092d565b80925081935050505b915091565b6000813590506106618161129e565b92915050565b6000815190506106768161129e565b92915050565b600082601f83011261068d57600080fd5b81516106a061069b82611017565b610fea565b915081818352602084019350602081019050838560208402820111156106c557600080fd5b60005b838110156106f557816106db8882610667565b8452602084019350602083019250506001810190506106c8565b5050505092915050565b60008083601f84011261071157600080fd5b8235905067ffffffffffffffff81111561072a57600080fd5b60208301915083602082028301111561074257600080fd5b9250929050565b60008083601f84011261075b57600080fd5b8235905067ffffffffffffffff81111561077457600080fd5b60208301915083602082028301111561078c57600080fd5b9250929050565b6000815190506107a2816112b5565b92915050565b600082601f8301126107b957600080fd5b81516107cc6107c78261103f565b610fea565b915080825260208301602083018583830111156107e857600080fd5b6107f383828461125a565b50505092915050565b600082601f83011261080d57600080fd5b815161082061081b8261106b565b610fea565b9150808252602083016020830185838301111561083c57600080fd5b61084783828461125a565b50505092915050565b60008060008060006060868803121561086857600080fd5b600086013567ffffffffffffffff81111561088257600080fd5b61088e88828901610749565b9550955050602086013567ffffffffffffffff8111156108ad57600080fd5b6108b9888289016106ff565b935093505060406108cc88828901610652565b9150509295509295909350565b600080604083850312156108ec57600080fd5b60006108fa85828601610793565b925050602083015167ffffffffffffffff81111561091757600080fd5b6109238582860161067c565b9150509250929050565b6000806040838503121561094057600080fd5b600083015167ffffffffffffffff81111561095a57600080fd5b610966858286016107fc565b925050602083015167ffffffffffffffff81111561098357600080fd5b61098f858286016107a8565b9150509250929050565b60006109a583836109ef565b60208301905092915050565b60006109bd8383610bda565b905092915050565b60006109d2848484610c13565b90509392505050565b60006109e78383610c40565b905092915050565b6109f8816111f9565b82525050565b610a07816111f9565b82525050565b6000610a18826110d1565b610a22818561113c565b9350610a2d83611097565b8060005b83811015610a5e578151610a458882610999565b9750610a5083611108565b925050600181019050610a31565b5085935050505092915050565b6000610a76826110dc565b610a80818561114d565b935083602082028501610a92856110a7565b8060005b85811015610ace5784840389528151610aaf85826109b1565b9450610aba83611115565b925060208a01995050600181019050610a96565b50829750879550505050505092915050565b6000610aec838561115e565b935083602084028501610afe846110b7565b8060005b87811015610b44578484038952610b1982846111a2565b610b248682846109c5565b9550610b2f84611122565b935060208b019a505050600181019050610b02565b50829750879450505050509392505050565b6000610b61826110e7565b610b6b818561115e565b935083602082028501610b7d856110c1565b8060005b85811015610bb95784840389528151610b9a85826109db565b9450610ba58361112f565b925060208a01995050600181019050610b81565b50829750879550505050505092915050565b610bd481611217565b82525050565b6000610be5826110f2565b610bef818561116f565b9350610bff81856020860161125a565b610c088161128d565b840191505092915050565b6000610c1f8385611180565b9350610c2c83858461124b565b610c358361128d565b840190509392505050565b6000610c4b826110fd565b610c558185611180565b9350610c6581856020860161125a565b610c6e8161128d565b840191505092915050565b6000610c86601783611191565b91507f313a2061727261792d6c656e6774682d696e76616c69640000000000000000006000830152602082019050919050565b6000610cc6601483611191565b91507f313a207065726d697373696f6e2d64656e6965640000000000000000000000006000830152602082019050919050565b6000610d06600e83611191565b91507f7461726765742d696e76616c69640000000000000000000000000000000000006000830152602082019050919050565b6000610d46601183611191565b91507f313a206c656e6774682d696e76616c69640000000000000000000000000000006000830152602082019050919050565b6000610d86601583611191565b91507f426574612d646f65732d6e6f742d656e61626c656400000000000000000000006000830152602082019050919050565b6000610dc6601083611191565b91507f313a206e6f742d636f6e6e6563746f72000000000000000000000000000000006000830152602082019050919050565b610e0281611241565b82525050565b6000602082019050610e1d60008301846109fe565b92915050565b60006020820190508181036000830152610e3e818486610ae0565b90509392505050565b6000602082019050610e5c6000830184610bcb565b92915050565b60006020820190508181036000830152610e7b81610c79565b9050919050565b60006020820190508181036000830152610e9b81610cb9565b9050919050565b60006020820190508181036000830152610ebb81610cf9565b9050919050565b60006020820190508181036000830152610edb81610d39565b9050919050565b60006020820190508181036000830152610efb81610d79565b9050919050565b60006020820190508181036000830152610f1b81610db9565b9050919050565b600060a082019050610f376000830189610df9565b8181036020830152610f4a818789610ae0565b90508181036040830152610f5e8186610a0d565b90508181036060830152610f728185610b56565b90508181036080830152610f868184610a6b565b9050979650505050505050565b60008083356001602003843603038112610fac57600080fd5b80840192508235915067ffffffffffffffff821115610fca57600080fd5b602083019250600182023603831315610fe257600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff8211171561100d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561102e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561105657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561108257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600080833560016020038436030381126111bb57600080fd5b83810192508235915060208301925067ffffffffffffffff8211156111df57600080fd5b6001820236038413156111f157600080fd5b509250929050565b600061120482611221565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561127857808201518184015260208101905061125d565b83811115611287576000848401525b50505050565b6000601f19601f8301169050919050565b6112a7816111f9565b81146112b257600080fd5b50565b6112be8161120b565b81146112c957600080fd5b5056fea2646970667358221220a2121b43fe6700e56193dae9b5dd912733183ca7c04ce6304f7e444b9a7c7d7664736f6c63430007000033";

type InstaImplementationBetaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstaImplementationBetaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstaImplementationBetaTest__factory extends ContractFactory {
  constructor(...args: InstaImplementationBetaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _instaIndex: string,
    _connectors: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InstaImplementationBetaTest> {
    return super.deploy(
      _instaIndex,
      _connectors,
      overrides || {}
    ) as Promise<InstaImplementationBetaTest>;
  }
  getDeployTransaction(
    _instaIndex: string,
    _connectors: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _instaIndex,
      _connectors,
      overrides || {}
    );
  }
  attach(address: string): InstaImplementationBetaTest {
    return super.attach(address) as InstaImplementationBetaTest;
  }
  connect(signer: Signer): InstaImplementationBetaTest__factory {
    return super.connect(signer) as InstaImplementationBetaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstaImplementationBetaTestInterface {
    return new utils.Interface(_abi) as InstaImplementationBetaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InstaImplementationBetaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InstaImplementationBetaTest;
  }
}
